apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    signingConfigs {
        config {
            keyAlias 'keyAlias'
            keyPassword 'android'
            storeFile file('../source.keystore')
            storePassword 'android'
        }
    }
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.jingxi.smartlife.pad"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode app_version.versionCode
        versionName project.hasProperty('version_name') ? version_name : app_version.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {

        debug {
            signingConfig signingConfigs.config
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }


    lintOptions {
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
//                outputFileName = rootProject.getName()+"_" + productFlavors[0].name + "_" + buildType.name + "_v" + defaultConfig.versionName + "-${releaseTime()}.apk"
                if(buildType.name.equals("release")){
                     outputFileName = "wujia_" + buildType.name + "_v" + defaultConfig.versionName + "-${releaseTime()}.apk"
                }
            }
    }
}


def releaseTime() {
    new Date().format("yyyyMMdd_HHmm")
}



dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "org.jetbrains.kotlin:$versions.kotlin_stdlib_jdk:$versions.kotlinVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutinesVersion"
//    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigationVersion"
//    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigationVersion"

    implementation project(':businesslib')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    annotationProcessor deps.butterknife.compiler
    kapt deps.butterknife.compiler
    implementation project(':family')
    implementation project(':property')
    implementation project(':safe')
    implementation project(':market')
    implementation project(':message')
//    implementation project(':neighbor')

    implementation project(':JPush')

    implementation 'com.umeng.umsdk:analytics:7.5.4'
    implementation 'com.umeng.umsdk:common:1.5.4'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

    implementation 'com.iqiyi.xcrash:xcrash-android-lib:2.1.7'// just for debug

}
