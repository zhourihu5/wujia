apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'wallet'
            keyPassword 'wallet!@#'
            storeFile file('../GYWallet.keystore')
            storePassword 'guiyi!@#'
        }
    }
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.wujia.intellect.terminal"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode app_version.versionCode
        versionName project.hasProperty('version_name') ? version_name : app_version.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        multiDexEnabled true
    }
    buildTypes {

        debug {
            signingConfig signingConfigs.config
        }

        release {
//            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            //只重命名正式版本
//            if (variant.buildType.name.equalsIgnoreCase('release')) {
//                outputFileName = "wujia-v${defaultConfig.versionName}-${defaultConfig.versionCode}-${getInnnerVersionName()}.apk"
//            }
//        }
//    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86', 'armeabi-v7a','x86_64'
//            universalApk true
//        }
//    }
}


def getInnnerVersionName() {
    new Date().format("yyyyMMdd")
}

dependencies {
    implementation project(':businesslib')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor deps.butterknife.compiler
    annotationProcessor deps.arouter.compiler
    implementation project(':family')
    implementation project(':property')
    implementation project(':safe')
    implementation project(':market')
    implementation project(':message')
    implementation project(':neighbor')
}
